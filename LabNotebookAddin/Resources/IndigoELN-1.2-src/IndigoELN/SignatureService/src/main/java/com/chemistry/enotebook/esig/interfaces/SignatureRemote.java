/****************************************************************************
 * Copyright (C) 2009-2015 EPAM Systems
 * 
 * This file is part of Indigo ELN.
 * 
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.GPL included in the
 * packaging of this file.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/
/*
 * Generated by XDoclet - Do not edit!
 */
package com.chemistry.enotebook.esig.interfaces;

import com.chemistry.enotebook.domain.NotebookPageModel;
import com.chemistry.enotebook.esig.exceptions.SignatureDelegateException;
import com.chemistry.enotebook.experiment.datamodel.user.NotebookUser;
import com.chemistry.enotebook.signature.ESignatureService.FileStandard;
import com.chemistry.enotebook.signature.ESignatureService.SigningStatus;
import com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;
import com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException;
import com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException;

import java.util.List;
import java.util.Map;

public interface SignatureRemote {

	public java.util.List<com.chemistry.enotebook.signature.classes.TemplateVO> getTemplates(
			java.lang.String userId)
			throws com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public com.chemistry.enotebook.signature.classes.SigDocumentVO submitDocument(
			com.chemistry.enotebook.signature.classes.SigDocumentVO vo)
			throws com.chemistry.enotebook.signature.exceptions.InvalidUserException,
			com.chemistry.enotebook.signature.exceptions.InvalidTemplateException,
			com.chemistry.enotebook.signature.exceptions.PublishException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public Map<String, SigningStatus> getDocumentStatus(List<String> keys)
			throws SignatureServiceUnavailableException,
			SignatureTokenInvalidException, ESignatureServiceException;

	public SigningStatus getDocumentStatus(String key)
			throws com.chemistry.enotebook.signature.exceptions.InvalidDocumentKeyException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public SigningStatus getFinalStatus() throws SignatureDelegateException,
			SignatureServiceUnavailableException,
			SignatureTokenInvalidException;

	public byte[] getFile(String key, FileStandard fileType)
			throws com.chemistry.enotebook.signature.exceptions.InvalidDocumentKeyException,
			com.chemistry.enotebook.signature.exceptions.InvalidFileTypeException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public void archiveFile(java.lang.String username, String key,
			NotebookPageModel page, NotebookUser user)
			throws com.chemistry.enotebook.signature.exceptions.InvalidDocumentKeyException,
			com.chemistry.enotebook.signature.exceptions.InvalidUserException,
			com.chemistry.enotebook.signature.exceptions.ArchiveException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public boolean haveThingsToSign(java.lang.String username)
			throws com.chemistry.enotebook.signature.exceptions.InvalidUserException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public boolean isDocumentArchived(java.lang.String key)
			throws com.chemistry.enotebook.signature.exceptions.ArchiveException,
			com.chemistry.enotebook.signature.exceptions.SignatureServiceUnavailableException,
			com.chemistry.enotebook.signature.exceptions.SignatureTokenInvalidException,
			com.chemistry.enotebook.signature.exceptions.ESignatureServiceException;

	public boolean isServiceAvailable()
			throws SignatureServiceUnavailableException;

	public boolean areSubmissionsAllowed() throws Exception;

	public String publishDocument(
			com.chemistry.enotebook.domain.NotebookPageModel page,
			byte[] buffer, java.lang.String docName, java.util.Date modDate,
			com.chemistry.enotebook.signature.classes.TemplateVO template,
			com.chemistry.enotebook.experiment.datamodel.user.NotebookUser user)
			throws Exception;
	
	public String getServiceUrl();
}
