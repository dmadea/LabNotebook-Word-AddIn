/****************************************************************************
 * Copyright (C) 2009-2015 EPAM Systems
 * 
 * This file is part of Indigo ELN.
 * 
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.GPL included in the
 * packaging of this file.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/
/*
 * Generated by XDoclet - Do not edit!
 */
package com.chemistry.enotebook.interfaces;

import com.chemistry.enotebook.compoundaggregation.classes.ScreenPanel;
import com.chemistry.enotebook.compoundaggregation.classes.ScreenPanelSelector;
import com.chemistry.enotebook.compoundaggregation.exceptions.CompoundAggregationServiceException;
import com.chemistry.enotebook.domain.JobModel;
import com.chemistry.enotebook.domain.NotebookPageModel;
import com.chemistry.enotebook.domain.PlateWell;
import com.chemistry.enotebook.domain.ProductBatchModel;
import com.chemistry.enotebook.vnv.classes.IVnvResult;

import java.util.List;
import java.util.Map;

public interface RegistrationManagerRemote {

	public Map<String, String> submitPlatesForRegistration(
			com.chemistry.enotebook.domain.ProductPlate[] pPlates,
			java.lang.String compoundManagementEmployeeID,
			com.chemistry.enotebook.domain.NotebookPageModel pageModel)
			throws Exception;

	public Map<String, String> submitBatchesForRegistration(
			com.chemistry.enotebook.domain.ProductBatchModel[] batches,
			java.lang.String userID,
			com.chemistry.enotebook.domain.NotebookPageModel pageModel)
			throws Exception;

	public com.chemistry.enotebook.domain.ProductBatchModel[] getRegistrationInformation(
			com.chemistry.enotebook.domain.ProductBatchModel[] batches)
			throws Exception;

	public Map<String, JobModel> submitPlatesToCompoundAggregation(
			java.lang.String userID,
			com.chemistry.enotebook.domain.ProductPlate[] pPlates,
			com.chemistry.enotebook.domain.NotebookPageHeaderModel pageHeader,
			java.lang.String siteCode) throws Exception;

	public String[] getScreenPanelsNames(long[] screenPanelIDs)
			throws Exception;

	public Map<String, JobModel> submitBatchesToCompoundAggregation(
			java.lang.String userID,
			com.chemistry.enotebook.domain.ProductBatchModel[] batches,
			com.chemistry.enotebook.domain.NotebookPageHeaderModel pageHeader,
			java.lang.String siteCode) throws Exception;

	public Map<String, JobModel> submitPlatesToCompoundManagement(
			com.chemistry.enotebook.domain.ProductPlate[] plates,
			java.lang.String siteCode) throws Exception;

	public Map<String, String> submitTubesToCompoundManagement(
			com.chemistry.enotebook.domain.PlateWell<ProductBatchModel>[] compContainers,
			java.lang.String siteCode) throws Exception;

	public com.chemistry.enotebook.domain.container.CompoundManagementBarcodePrefixInfo[] getCompoundManagementBarcodePrefixes(
			java.lang.String containerType, java.lang.String siteCode)
			throws Exception;

	public java.lang.String[] getNewGBLPlateBarCodesFromCompoundManagement(
			java.lang.String barcodePrefix, int noOfBarcodes,
			java.lang.String siteCode) throws Exception;

	public java.util.Map<String, JobModel> submitPlatesForPurification(
			java.lang.String userID, java.lang.String siteCode,
			com.chemistry.enotebook.domain.ProductPlate[] plates)
			throws Exception;

	public java.util.Map<String, JobModel> submitTubesForPurification(
			String userName, String siteCode, String pageKey,
			PlateWell<ProductBatchModel>[] tubes) throws Exception;

	public boolean isCompoundAggregationApiAvailable(String siteCode)
			throws java.lang.Exception;

	public boolean isPurificationServiceApiAvailable()
			throws java.lang.Exception;

	public boolean isCompoundManagementContainerApiAvailable(String siteCode)
			throws java.lang.Exception;

	public String submitBatchesAndPlatesForRegistration(
			java.lang.String batchKeys[], java.lang.String plateKeys[],
			java.lang.String workflows[], NotebookPageModel pageModel)
			throws Exception;

	public java.lang.String getCompoundManagementTubeGuidByBarCodeAndSiteCode(
			java.lang.String barCode, java.lang.String siteCode)
			throws Exception;

	public IVnvResult validateStructureAssignStereoIsomerCode(
			String molStructure) throws java.lang.Exception;

	public IVnvResult validateStructureWithStereoIsomerCode(
			String molStructure, String inputSic) throws java.lang.Exception;

	public List<String> getPurificationArchivePlateChoice()
			throws java.lang.Exception;

	public List<String> getLabsForPurification(String siteCode)
			throws java.lang.Exception;

	public List<String> getPurificationSampleWorkup()
			throws java.lang.Exception;

	public ScreenPanelSelector getScreenPanelDialog()
			throws CompoundAggregationServiceException;

	public ScreenPanel getScreenPanel(long screenKey)
			throws CompoundAggregationServiceException;
}
