/****************************************************************************
 * Copyright (C) 2009-2015 EPAM Systems
 * 
 * This file is part of Indigo ELN.
 * 
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.GPL included in the
 * packaging of this file.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/
/*
 * Generated by XDoclet - Do not edit!
 */
package com.chemistry.enotebook.sdk.interfaces;

import com.chemistry.enotebook.sdk.ChemUtilAccessException;

public interface ChemistryService {
	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean isChemistryEmpty(byte[] chemistry) throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean isChemistryEqual(byte[] chemistry1, byte[] chemistry2)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public byte[] convertChemistry(byte[] inBuff, java.lang.String inBuffType,
			java.lang.String outBuffType) throws ChemUtilAccessException;

	/**
	 * Method to determine if chemistry contains a valid reaction
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean isReaction(byte[] sketch) throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public com.chemistry.enotebook.sdk.ReactionProperties extractReactionComponents(
			com.chemistry.enotebook.sdk.ReactionProperties rxnProp)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public com.chemistry.enotebook.sdk.ReactionProperties combineReactionComponents(
			com.chemistry.enotebook.sdk.ReactionProperties rxnProp)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public byte[] convertReactionToPicture(byte[] chemistry, int format,
			int height, int width, double loss, double pixelToMM)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean areMoleculesEqual(byte[] chemistry1, byte[] chemistry2)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public com.chemistry.enotebook.sdk.ChemistryProperties getMolecularInformation(
			byte[] chemistry) throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean isMoleculeChiral(byte[] chemistry) throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public byte[] setChiralFlag(byte[] chemistry, boolean flag)
			throws ChemUtilAccessException;

	/**
	 * Method to convert Chemistry from one data format to another
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public byte[] convertStructureToPicture(byte[] chemistry, int format,
			int height, int width, double loss, double pixelToMM)
			throws ChemUtilAccessException;

	/**
	 * Method to set the Debug Flag so that chemistry processed is recorded
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public void setDebugFlag(boolean flag);

	/**
	 * Method to set the Debug Flag so that chemistry processed is recorded
	 * 
	 * @throws ChemUtilAccessException
	 *             Thrown if the instance could not perform the function
	 *             requested by the container because of an system-level error.
	 */
	public boolean getDebugFlag();

}
