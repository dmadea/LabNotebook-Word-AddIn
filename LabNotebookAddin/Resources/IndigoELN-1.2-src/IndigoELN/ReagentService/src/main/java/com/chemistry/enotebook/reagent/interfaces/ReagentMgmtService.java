/****************************************************************************
 * Copyright (C) 2009-2015 EPAM Systems
 * 
 * This file is part of Indigo ELN.
 * 
 * This file may be distributed and/or modified under the terms of the
 * GNU General Public License version 3 as published by the Free Software
 * Foundation and appearing in the file LICENSE.GPL included in the
 * packaging of this file.
 * 
 * This file is provided AS IS with NO WARRANTY OF ANY KIND, INCLUDING THE
 * WARRANTY OF DESIGN, MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.
 ***************************************************************************/
/*
 * Generated by XDoclet - Do not edit!
 */
package com.chemistry.enotebook.reagent.interfaces;

import com.chemistry.enotebook.hazard.exceptions.HazardException;

public interface ReagentMgmtService {

	public byte[] getMyReagentList(java.lang.String UserID)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException,
			com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException;

	public void UpdateMyReagentList(
			com.chemistry.enotebook.reagent.valueobject.UserInfoVO myInfo,
			java.lang.String MyReagentList)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException,
			com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException;

	public void UpdateMyReagentList(java.lang.String userName,
			byte[] MyReagentList)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException,
			com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException;

	public java.lang.String getDBInfo(java.lang.String SiteID)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException,
			com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException;

	public void updateReagentDBXML(java.lang.String SiteCode,
			java.lang.String reagentDBXML)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException;

	public byte[] doReagentsSearch(
			java.lang.String searchParamsXML,
			com.chemistry.enotebook.reagent.delegate.ReagentCallBackInterface cbInterface)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException,
			com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException;

	public java.lang.String getStructureByCompoundNo(
			java.lang.String compoundNumber)
			throws com.chemistry.enotebook.reagent.exceptions.ReagentInvalidTokenException,
			com.chemistry.enotebook.reagent.exceptions.ReagentMgmtException,
			com.chemistry.enotebook.compoundmgmtservice.exception.CompoundNotFoundException;

	public String getHazardInfo(String id, String idtype, String lang)
			throws HazardException;

	public boolean getHazardInfoHealth() throws HazardException;
}
